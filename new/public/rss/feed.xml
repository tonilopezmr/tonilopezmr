<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Toni López</title>
        <link>undefined</link>
        <description>Your blog description</description>
        <lastBuildDate>Tue, 13 May 2025 21:18:26 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <image>
            <title>Toni López</title>
            <url>undefined/favicon.ico</url>
            <link>undefined</link>
        </image>
        <copyright>All rights reserved 2025</copyright>
        <item>
            <title><![CDATA[Bacota - My Most Personal Project]]></title>
            <link>undefined/articles/my-most-personal-project</link>
            <guid>undefined/articles/my-most-personal-project</guid>
            <pubDate>Tue, 13 May 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[A retrospective on building Bacota my most personal project.]]></description>
            <content:encoded><![CDATA[<div class="mt-6 mx-16"><div class="flex justify-between items-center"><div class="flex-1"><img alt="Old Bacota Hardware" loading="lazy" width="96" height="96" decoding="async" data-nimg="1" class="rounded-lg" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fold_bacota.c8432011.jpeg&amp;w=96&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fold_bacota.c8432011.jpeg&amp;w=256&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fold_bacota.c8432011.jpeg&amp;w=256&amp;q=75"/></div><div class="flex-none px-8"><div class="text-2xl">→</div></div><div class="flex-1 flex justify-end"><img alt="Bacota Logo" loading="lazy" width="76" height="76" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota.1503cafb.png&amp;w=96&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota.1503cafb.png&amp;w=256&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota.1503cafb.png&amp;w=256&amp;q=75"/></div></div><div class="flex justify-between mt-2 text-sm text-zinc-600 dark:text-zinc-400"><div>1999-2018</div>
<div>2018-2021</div></div></div>
<h2>Long Story Short</h2>
<p>My journey into hardware started with IoT home automation. Frustrated with existing smart home solutions, I began building my own devices, starting with simple fan and light controls.</p>
<p><a href="https://bacota.com">Bacota</a> was born.</p>
<p>When hardware miniaturization proved challenging, I pivoted to vertical garden irrigation systems. I built sensors and dashboards to help installers identify dry spots and maintenance issues remotely. The project grew complex with multiple components as I explored the technical possibilities.</p>
<p>However, I made the mistake of building without customer feedback. When a friend needed improved software for garage door hardware from China, I realized I wasn&#x27;t equipped for hardware manufacturing at scale.</p>
<p>This led to my final approach - modifying existing Chinese hardware with custom firmware. This leveraged my software strengths while applying everything I&#x27;d learned about hardware. It was the perfect balance of practicality and innovation.</p>

<div class="mt-16 sm:mt-20 overflow-x-auto"><div class="hidden md:flex bg-blue-300 h-40 w-full justify-center items-center"><p class="text-white">Visible on desktop</p></div><div class="hidden md:flex justify-center gap-5 py-4 sm:gap-8 min-w-full -my-4"><div class="relative aspect-[9/10] w-44 flex-none overflow-hidden rounded-xl bg-zinc-100 dark:bg-zinc-800 sm:w-72 sm:rounded-2xl rotate-2"><img alt="" loading="lazy" width="3096" height="4128" decoding="async" data-nimg="1" class="absolute inset-0 h-full w-full object-cover" style="color:transparent" sizes="(min-width: 640px) 18rem, 11rem" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=16&amp;q=75 16w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=32&amp;q=75 32w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=48&amp;q=75 48w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=64&amp;q=75 64w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=96&amp;q=75 96w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=128&amp;q=75 128w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=256&amp;q=75 256w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=384&amp;q=75 384w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=640&amp;q=75 640w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=750&amp;q=75 750w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=828&amp;q=75 828w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=3840&amp;q=75 3840w" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=3840&amp;q=75"/></div><div class="relative aspect-[9/10] w-44 flex-none overflow-hidden rounded-xl bg-zinc-100 dark:bg-zinc-800 sm:w-72 sm:rounded-2xl -rotate-2"><img alt="" loading="lazy" width="4128" height="3096" decoding="async" data-nimg="1" class="absolute inset-0 h-full w-full object-cover" style="color:transparent" sizes="(min-width: 640px) 18rem, 11rem" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=16&amp;q=75 16w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=32&amp;q=75 32w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=48&amp;q=75 48w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=64&amp;q=75 64w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=96&amp;q=75 96w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=128&amp;q=75 128w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=256&amp;q=75 256w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=384&amp;q=75 384w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=640&amp;q=75 640w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=750&amp;q=75 750w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=828&amp;q=75 828w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=3840&amp;q=75 3840w" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=3840&amp;q=75"/></div><div class="relative aspect-[9/10] w-44 flex-none overflow-hidden rounded-xl bg-zinc-100 dark:bg-zinc-800 sm:w-72 sm:rounded-2xl rotate-2"><img alt="" loading="lazy" width="3096" height="4128" decoding="async" data-nimg="1" class="absolute inset-0 h-full w-full object-cover" style="color:transparent" sizes="(min-width: 640px) 18rem, 11rem" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=16&amp;q=75 16w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=32&amp;q=75 32w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=48&amp;q=75 48w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=64&amp;q=75 64w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=96&amp;q=75 96w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=128&amp;q=75 128w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=256&amp;q=75 256w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=384&amp;q=75 384w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=640&amp;q=75 640w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=750&amp;q=75 750w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=828&amp;q=75 828w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=3840&amp;q=75 3840w" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=3840&amp;q=75"/></div><div class="relative aspect-[9/10] w-44 flex-none overflow-hidden rounded-xl bg-zinc-100 dark:bg-zinc-800 sm:w-72 sm:rounded-2xl -rotate-2"><img alt="" loading="lazy" width="4128" height="3096" decoding="async" data-nimg="1" class="absolute inset-0 h-full w-full object-cover" style="color:transparent" sizes="(min-width: 640px) 18rem, 11rem" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=16&amp;q=75 16w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=32&amp;q=75 32w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=48&amp;q=75 48w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=64&amp;q=75 64w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=96&amp;q=75 96w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=128&amp;q=75 128w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=256&amp;q=75 256w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=384&amp;q=75 384w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=640&amp;q=75 640w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=750&amp;q=75 750w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=828&amp;q=75 828w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=3840&amp;q=75 3840w" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=3840&amp;q=75"/></div></div><div class="grid grid-cols-2 gap-4 md:hidden"><div class="relative aspect-[9/10] w-full overflow-hidden rounded-xl bg-zinc-100 dark:bg-zinc-800 rotate-2"><img alt="" loading="lazy" width="3096" height="4128" decoding="async" data-nimg="1" class="absolute inset-0 h-full w-full object-cover" style="color:transparent" sizes="11rem" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=16&amp;q=75 16w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=32&amp;q=75 32w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=48&amp;q=75 48w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=64&amp;q=75 64w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=96&amp;q=75 96w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=128&amp;q=75 128w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=256&amp;q=75 256w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=384&amp;q=75 384w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=640&amp;q=75 640w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=750&amp;q=75 750w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=828&amp;q=75 828w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=3840&amp;q=75 3840w" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota1.848b5429.jpg&amp;w=3840&amp;q=75"/></div><div class="relative aspect-[9/10] w-full overflow-hidden rounded-xl bg-zinc-100 dark:bg-zinc-800 -rotate-2"><img alt="" loading="lazy" width="4128" height="3096" decoding="async" data-nimg="1" class="absolute inset-0 h-full w-full object-cover" style="color:transparent" sizes="11rem" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=16&amp;q=75 16w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=32&amp;q=75 32w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=48&amp;q=75 48w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=64&amp;q=75 64w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=96&amp;q=75 96w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=128&amp;q=75 128w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=256&amp;q=75 256w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=384&amp;q=75 384w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=640&amp;q=75 640w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=750&amp;q=75 750w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=828&amp;q=75 828w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=3840&amp;q=75 3840w" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota2.3eecf04b.jpg&amp;w=3840&amp;q=75"/></div><div class="relative aspect-[9/10] w-full overflow-hidden rounded-xl bg-zinc-100 dark:bg-zinc-800 rotate-2"><img alt="" loading="lazy" width="3096" height="4128" decoding="async" data-nimg="1" class="absolute inset-0 h-full w-full object-cover" style="color:transparent" sizes="11rem" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=16&amp;q=75 16w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=32&amp;q=75 32w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=48&amp;q=75 48w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=64&amp;q=75 64w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=96&amp;q=75 96w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=128&amp;q=75 128w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=256&amp;q=75 256w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=384&amp;q=75 384w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=640&amp;q=75 640w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=750&amp;q=75 750w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=828&amp;q=75 828w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=3840&amp;q=75 3840w" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota3.e87f7473.jpg&amp;w=3840&amp;q=75"/></div><div class="relative aspect-[9/10] w-full overflow-hidden rounded-xl bg-zinc-100 dark:bg-zinc-800 -rotate-2"><img alt="" loading="lazy" width="4128" height="3096" decoding="async" data-nimg="1" class="absolute inset-0 h-full w-full object-cover" style="color:transparent" sizes="11rem" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=16&amp;q=75 16w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=32&amp;q=75 32w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=48&amp;q=75 48w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=64&amp;q=75 64w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=96&amp;q=75 96w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=128&amp;q=75 128w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=256&amp;q=75 256w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=384&amp;q=75 384w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=640&amp;q=75 640w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=750&amp;q=75 750w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=828&amp;q=75 828w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=3840&amp;q=75 3840w" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbacota4.c71857e2.jpg&amp;w=3840&amp;q=75"/></div></div></div>
<h2>Why I Built This</h2>
<p>This project was deeply personal. After losing a friend who worked in electronics, <strong>someone important to me, told me I could never work with electronics without going to university</strong>. Her dismissive comment sparked my determination to <em>prove her wrong</em>.</p>
<p>I started learning Arduino development to honor my friend&#x27;s memory. What began as defiance became a journey of discovery, where I found magic in combining software and hardware to create something meaningful ✨</p>
<h2>Learnings</h2>
<ol>
<li>
<blockquote>
<p>Looking back, I realize I didn&#x27;t truly tried to the Bacota company - my focus was entirely on learning and proving myself. I neglected crucial business aspects like customer development, seeking funding, or building a team. My passion for mastering electronics overshadowed the practical steps needed for a successful hardware startup.</p>
</blockquote>
</li>
<li>
<p>I invested more than €10,000 thinking I failed at building a company. The reality is that <strong>I invested in myself</strong> to demonstrate I could do it, <strong>not in the company.</strong></p>
</li>
<li>
<p><strong>I discovered I&#x27;m capable of anything I set my mind to</strong> - from building electronic devices from scratch and understanding the physics behind them, to developing full-stack software solutions, hacking hardware bypasing my firmware, creating 3D objects and more.</p>
</li>
<li>
<p>I did everything myself, I didn&#x27;t try to build a team or delegate anything - it was all ego-driven.</p>
</li>
<li>
<p>All this journey was about my EGO and me.</p>
</li>
<li>
<p>Work-life balance is crucial for the long term, burnout is real. <strong>For 4 years, I juggled this project alongside a full-time job, sacrificing nearly every weekend</strong>, working late into the night, and getting minimal sleep. Looking back, I should have taken more time to rest and recharge.</p>
</li>
<li>
<p>Don&#x27;t dismiss companies making seemingly poor features or products, there&#x27;s likely a good reason. Being both a hardware and software company is incredibly challenging, even more if you are going solo.</p>
</li>
<li>
<p>I mistakenly believed I could handle large projects better on my own.</p>
</li>
</ol>

<div class="mt-16 sm:mt-20"><div class="aspect-[2/1] w-full overflow-hidden rounded-xl bg-zinc-100 dark:bg-zinc-800"><img alt="" fetchpriority="high" width="1280" height="720" decoding="async" data-nimg="1" class="h-full w-full object-cover" style="color:transparent" sizes="(min-width: 1024px) 100vw, 100vw" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffinal_bacota.88a4f105.png&amp;w=640&amp;q=75 640w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffinal_bacota.88a4f105.png&amp;w=750&amp;q=75 750w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffinal_bacota.88a4f105.png&amp;w=828&amp;q=75 828w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffinal_bacota.88a4f105.png&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffinal_bacota.88a4f105.png&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffinal_bacota.88a4f105.png&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffinal_bacota.88a4f105.png&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffinal_bacota.88a4f105.png&amp;w=3840&amp;q=75 3840w" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffinal_bacota.88a4f105.png&amp;w=3840&amp;q=75"/></div></div>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[Grades Calculator retrospective]]></title>
            <link>undefined/articles/calculanotas-retrospective</link>
            <guid>undefined/articles/calculanotas-retrospective</guid>
            <pubDate>Sun, 17 Nov 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[A retrospective on building a grades calculator app that helped university students determine their needed exam scores, reaching thousands of users before being sunset after 3 years.]]></description>
            <content:encoded><![CDATA[<p><a href="https://old.tonilopezmr.com/calculanotas/">website</a></p>
<h2>Short Story</h2>
<p>Every exam period at the university, I had to calculate the grades I needed to get to pass. For this, I had to look at the structure of each subject and calculate the grade counting practicals, assignments and exams.</p>
<p>Something like, 60% exam, 30% practicals, 10% assignments.
Then the practicals had different percentages, practical 1: 10%, practical 2: 9%, practical 3: 11%.</p>
<p>I spent too much time and preferred to have an easier way to do it... So I created calculators where you can specify the structure of each subject, add your grades and see what minimum grade you needed to get to pass.</p>
<p>I shared it with all my friends and people used it.</p>
<h2>Promotion</h2>
<p>A year later after the success of <a href="https://www.tonilopezmr.com/articles/facemash-upv">Facemash UPV</a>, I used Facemash success to promote the app.</p>
<p>This gave me large exposure to thousands of students around the world.</p>
<h2>Why I Built This</h2>
<p>I wanted to solve a problem I had, and learn Advanced Architecture development in Android.</p>
<p>So as soon as I didn&#x27;t need the application myself, and I had learned advanced architecture development, I stopped maintaining it.</p>
<p>Lifespan: 3 years.</p>
<p>Related blog post:</p>
<ul>
<li><a href="https://www.tonilopezmr.com/articles/nueva-version-de-calculanotas-nueva-interfaz">First year of Grades Calculator, new UI interface.</a></li>
<li><a href="https://www.tonilopezmr.com/articles/calcula-notas-cumple-3-anyos">Three years birthday</a></li>
</ul>
<h2>Learnings</h2>
<ol>
<li>Publication process in the App Store</li>
<li>Material design</li>
<li>If it doesn&#x27;t generate money, it won&#x27;t be maintained.</li>
<li>Work on support emails and continuous changes, through years.</li>
</ol>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[The AI Framework]]></title>
            <link>undefined/articles/ai-pipelines-with-smartpipes</link>
            <guid>undefined/articles/ai-pipelines-with-smartpipes</guid>
            <pubDate>Wed, 09 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[I explain how to build AI Applications in minutes using ML Flows like Smart Pipes Framework]]></description>
            <content:encoded><![CDATA[<p>Three months ago, I won the <a href="https://www.eventbrite.es/e/generative-ai-hackathon-tickets-619584342447">Generative AI Hackathon in Valencia</a>, showcasing an AI Applications builder with a Python SDK.</p>
<p>In a similar vein as <a href="https://bodia.ai">Bodia AI</a>, my aim was to establish a more user-friendly approach for crafting AI Applications compared to Lagnchain, while also enabling effortless deployment through a single command.</p>
<p>I began to develop the AI Framework officially for <a href="https://www.seaplane.io/">Seaplane</a> after pivoting into AI.</p>
<h2>ML Flows</h2>
<p>Machine Learning Flows determine which steps are included in a machine learning project.
They help you managing the end-to-end ML lifecycles solving <a href="https://en.wikipedia.org/wiki/MLOps">MLOps</a> usually building <a href="https://airflow.apache.org/docs/apache-airflow/stable/core-concepts/dags.html">DAGs</a>.</p>
<p>Numerous solutions are available for tackling this issue, but Generative AI takes center stage.</p>
<p>The concept involves constructing an ML Flow that can be accessed via HTTP API Calls, Queues, or Cron Jobs. An ML Flow consists of the Entry Point (<code>@app</code>), alongside distinct Steps or <code>@tasks</code> that can be independently scaled.</p>
<pre class="language-python"><code class="language-python"><span class="token decorator annotation punctuation">@task</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">hello_world_task</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;hello world </span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">[</span><span class="token string">&#x27;_request_id&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>

<span class="token decorator annotation punctuation">@app</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;hello-world-app&quot;</span><span class="token punctuation">,</span> path<span class="token operator">=</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">hello_world_app</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> hello_world_task<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
</code></pre>
<p>Here, <code>@app(id=&quot;hello-world-app&quot;, path=&quot;/hello&quot;)</code> serves as the Entry Point, generating an endpoint with the path <code>/hello</code>. The structure of the DAG is defined within the body of <code>@app</code>.</p>
<p>On the other hand, <code>@task()</code> represents an individual task responsible for executing a designated job, such as invoking a Generative AI model or storing data.</p>
<h2>Smart Pipes AI Framework</h2>
<p>The Smart Pipes framework presents an array of pre-built features tailored for real-world AI Applications. This encompasses actions like utilizing Text-to-Text models, converting files into vectors for embedding text into various Gen AI Models, and more.</p>
<p>The framework&#x27;s aspiration is akin to that of NextJS for Vercel, offering the ability to effortlessly craft web applications and promptly deploy them with a single click.</p>
<p>For instance, if the objective is to load a batch of files and subsequently create a ChatBot that interacts with these files seamlessly:</p>
<pre class="language-python"><code class="language-python"><span class="token decorator annotation punctuation">@app</span><span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;/load_pdfs&quot;</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;load_pdfs&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">load_pdfs_app</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    
    <span class="token builtin">file</span> <span class="token operator">=</span> save_pdfs<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>    
    store_loaded_file<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@task</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&quot;vector&quot;</span><span class="token punctuation">,</span> vector_name<span class="token operator">=</span><span class="token string">&quot;my_company_docs&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">save_pdfs</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">,</span> store<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">[</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">]</span>
    <span class="token builtin">id</span> <span class="token operator">=</span> store<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token builtin">id</span><span class="token punctuation">,</span> <span class="token string">&quot;filename&quot;</span><span class="token punctuation">:</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename<span class="token punctuation">}</span>

<span class="token decorator annotation punctuation">@task</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&quot;sql&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">store_loaded_file</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">,</span> sql<span class="token punctuation">)</span><span class="token punctuation">:</span>

    sql<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token string">&quot;files_table&quot;</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">[</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">[</span><span class="token string">&quot;filename&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@task</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&quot;vector&quot;</span><span class="token punctuation">,</span> vector_name<span class="token operator">=</span><span class="token string">&quot;my_company_docs&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">chat_with_pdfs</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">,</span> store<span class="token punctuation">)</span><span class="token punctuation">:</span>    

    <span class="token keyword">return</span> store<span class="token punctuation">.</span>chat<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">[</span><span class="token string">&quot;query&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># Returns the answer and chat history</span>

<span class="token decorator annotation punctuation">@app</span><span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;/chatbot&quot;</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;files_chatbot&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">save_files</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> chat_with_pdfs<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>
</code></pre>
<p>With this concise snippet, a functional ChatBot capable of engaging with files is established. By default, it utilizes <code>GPT-3.5</code>, requiring the configuration of the OpenAI API Key.</p>
<h2>Effortless Deployment</h2>
<p>The process of deploying your chatbot is remarkably straightforward with the command <code>seaplane deploy</code>:</p>
<pre class="language-shell"><code class="language-shell"><span class="token operator">&gt;</span> seaplane deploy

<span class="token punctuation">[</span>Seaplane<span class="token punctuation">]</span>

    Seaplane Apps version <span class="token number">0.3</span>.89

<span class="token punctuation">[</span>Seaplane<span class="token punctuation">]</span> Deployed Endpoints:

<span class="token punctuation">[</span>Seaplane<span class="token punctuation">]</span> 🚀 load_pdfs Endpoint: POST /apps/load_pdfs/latest/load_pdfs
<span class="token punctuation">[</span>Seaplane<span class="token punctuation">]</span> 🚀 files_chatbot Endpoint: POST /apps/files_chatbot/latest/chatbot

<span class="token punctuation">[</span>Seaplane<span class="token punctuation">]</span> 🚀 Deployment complete
</code></pre>
<p>Currently, this framework is in closed beta and is already being used by some customers. You can learn more by exploring the <a href="https://github.com/seaplane-io/seaplane">seaplane</a> repository on GitHub.</p>
<p>I plan to delve further into my AI journey. If you are interested on it, please let me know in <a href="https://x.com/tonilopezmr">@tonilopezmr</a></p>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[Instantclip MVP]]></title>
            <link>undefined/articles/instantclip-week-2</link>
            <guid>undefined/articles/instantclip-week-2</guid>
            <pubDate>Sun, 23 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Instantclip MVP explanation.]]></description>
            <content:encoded><![CDATA[<p>During this week I started the iOS application, and this is the roadmap for finish the MVP.</p>
<ol>
<li>List of templates.</li>
<li>Be able to play template examples to decide if you want to use it or not.</li>
<li>Video selection and trimming</li>
<li>Create the video result from the information given by a generic template, that should work for many different templates.</li>
<li>Play the result and share it.</li>
</ol>
<p>I have been able to do from 1 to 3/2, I was a little bit stuck on the trimming view, becuase I need to do it using a ViewController without using SwiftUI and integrate it in SwiftUI. I can do screens using SwiftUI but I wasn&#x27;t familiar with UIKit.</p>
<h3>List of templates</h3>
<div class="react-tweet-theme tweet-container_root__oEvvl tweet-skeleton_root__vziMr"><article class="tweet-container_article___GeQN"><span class="skeleton_skeleton__NNIe_" style="height:3rem;margin-bottom:0.75rem"></span><span class="skeleton_skeleton__NNIe_" style="height:6rem;margin:0.5rem 0"></span><div style="border-top:var(--tweet-border);margin:0.5rem 0"></div><span class="skeleton_skeleton__NNIe_" style="height:2rem"></span><span class="skeleton_skeleton__NNIe_" style="height:2rem;border-radius:9999px;margin-top:0.5rem"></span></article></div>
<h3>Play template and Video selection</h3>
<div class="react-tweet-theme tweet-container_root__oEvvl tweet-skeleton_root__vziMr"><article class="tweet-container_article___GeQN"><span class="skeleton_skeleton__NNIe_" style="height:3rem;margin-bottom:0.75rem"></span><span class="skeleton_skeleton__NNIe_" style="height:6rem;margin:0.5rem 0"></span><div style="border-top:var(--tweet-border);margin:0.5rem 0"></div><span class="skeleton_skeleton__NNIe_" style="height:2rem"></span><span class="skeleton_skeleton__NNIe_" style="height:2rem;border-radius:9999px;margin-top:0.5rem"></span></article></div>
<h3>Video trimming</h3>
<div class="react-tweet-theme tweet-container_root__oEvvl tweet-skeleton_root__vziMr"><article class="tweet-container_article___GeQN"><span class="skeleton_skeleton__NNIe_" style="height:3rem;margin-bottom:0.75rem"></span><span class="skeleton_skeleton__NNIe_" style="height:6rem;margin:0.5rem 0"></span><div style="border-top:var(--tweet-border);margin:0.5rem 0"></div><span class="skeleton_skeleton__NNIe_" style="height:2rem"></span><span class="skeleton_skeleton__NNIe_" style="height:2rem;border-radius:9999px;margin-top:0.5rem"></span></article></div>
<hr/>
<p>Weeks since I start instantclip, 2.</p>
<blockquote>
<p>I&#x27;d like to share a summary of the week building instantclip here as a retrospective, I&#x27;m going to use my tweets as a reference for the summary, my blog is going to be in English, but my tweets can be in Spanish or English, I didn&#x27;t decide yet what to do with the language of my tweets :D.</p>
</blockquote>
<blockquote>
<p>Instantclip is an application to create videos easily without the need of editing using templates, those templates are uploaded by creators that can add a price for using the template. You can visit the webpage <a href="https://instantclip.app">instantclip.app</a>.</p>
</blockquote>
<div class="react-tweet-theme tweet-container_root__oEvvl tweet-skeleton_root__vziMr"><article class="tweet-container_article___GeQN"><span class="skeleton_skeleton__NNIe_" style="height:3rem;margin-bottom:0.75rem"></span><span class="skeleton_skeleton__NNIe_" style="height:6rem;margin:0.5rem 0"></span><div style="border-top:var(--tweet-border);margin:0.5rem 0"></div><span class="skeleton_skeleton__NNIe_" style="height:2rem"></span><span class="skeleton_skeleton__NNIe_" style="height:2rem;border-radius:9999px;margin-top:0.5rem"></span></article></div>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[First week of instantclip]]></title>
            <link>undefined/articles/instantclip-week-1</link>
            <guid>undefined/articles/instantclip-week-1</guid>
            <pubDate>Sun, 16 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[My journy creating instantclip iOS app.]]></description>
            <content:encoded><![CDATA[<p>I&#x27;d like to share a summary of the week building instantclip here as a retrospective, I&#x27;m going to use my tweets as a reference for the summary, my blog is going to be in English, but my tweets can be in Spanish or English, I didn&#x27;t decide yet what to do with the language of my tweets :D.</p>
<p>Instantclip is an application to create videos easily without the need of editing using templates, those templates are uploaded by creators that can add a price for using the template. You can visit the webpage <a href="https://instantclip.app">instantclip.app</a>.</p>
<div class="react-tweet-theme tweet-container_root__oEvvl tweet-skeleton_root__vziMr"><article class="tweet-container_article___GeQN"><span class="skeleton_skeleton__NNIe_" style="height:3rem;margin-bottom:0.75rem"></span><span class="skeleton_skeleton__NNIe_" style="height:6rem;margin:0.5rem 0"></span><div style="border-top:var(--tweet-border);margin:0.5rem 0"></div><span class="skeleton_skeleton__NNIe_" style="height:2rem"></span><span class="skeleton_skeleton__NNIe_" style="height:2rem;border-radius:9999px;margin-top:0.5rem"></span></article></div>
<p>I have done many projects, and I have always been thinking to share those projects but it was too much effort for me, now everything is going to be different, I&#x27;m going to use my experience to change everything to do it successfully, and for me successful is just finish it and share it with the rest of the world.</p>
<p>What I have done this week:</p>
<ul>
<li>Decide the final name, at the moment Instant Clip, <a href="https://instantclip.app">instantclip.app</a>.</li>
<li>Buy the domain and email provider.</li>
<li>I paid a designer to design the logo.</li>
<li>Create a landing page.</li>
<li>Add Early access capabilities to the landing page.</li>
<li>Contact with a few creators.</li>
<li>Develop an example in iOS checking the main features I&#x27;d need to do with videos, trimming, trimming view, merge, etc...</li>
<li>Start the iOS project with the first screen but not finished yet.</li>
</ul>
<p>It seems a lot but I didn&#x27;t work too much, or at least I didn&#x27;t work frequently, just some days really focus. I need to improve that.</p>
<div class="react-tweet-theme tweet-container_root__oEvvl tweet-skeleton_root__vziMr"><article class="tweet-container_article___GeQN"><span class="skeleton_skeleton__NNIe_" style="height:3rem;margin-bottom:0.75rem"></span><span class="skeleton_skeleton__NNIe_" style="height:6rem;margin:0.5rem 0"></span><div style="border-top:var(--tweet-border);margin:0.5rem 0"></div><span class="skeleton_skeleton__NNIe_" style="height:2rem"></span><span class="skeleton_skeleton__NNIe_" style="height:2rem;border-radius:9999px;margin-top:0.5rem"></span></article></div>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[Fun electronics with Fan]]></title>
            <link>undefined/articles/fun-with-fan</link>
            <guid>undefined/articles/fun-with-fan</guid>
            <pubDate>Tue, 09 Oct 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[How I started learning electronics from 0 and controll my Fan remotely.]]></description>
            <content:encoded><![CDATA[<p>I have started a new adventure learning electronics, and I found a good problem to solve with electronics, <strong>control my fan remotely</strong>. The purpose was to learn electronics more deeply instead of using a simple Arduino board.</p>
<h2>The problem</h2>
<p>I had an old fan 10 years old, it is <strong>Cata fan with model DP40</strong>. I wanted to turn on/off and control the fan speed. <strong>My fan has four states: off, velocity 1, 2 and 3. I wanted to control my fan remotely and manually at the same time</strong>, for example, you put the speed two manually because you were standing, but after some minutes you want to turn off or change to the velocity one with the remote control.</p>
<h2>How my fan works</h2>
<hr/>
<p>Before start coding or doing something else, I needed to know how my fan worked because I don&#x27;t know how usually fan works or how my fan changes the speed.</p>
<p><strong>I disassemble my fan and I saw a switch with three channels</strong> where the AC Line load it is connected with three different wires depending on the speed, that is how my fan works, giving volts to three different wires.</p>
<img loading="lazy" width="1600" height="1200" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffan_switch.49dc95ad.jpeg&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffan_switch.49dc95ad.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffan_switch.49dc95ad.jpeg&amp;w=3840&amp;q=75"/>
<p>When I saw the switch with three channels, etc. I suppose how it worked but <strong>I needed to try it connecting the AC line wire to one of the speed wires to confirm that it worked</strong>, this is how it looked like:</p>
<img loading="lazy" width="3096" height="4128" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffan_head.b5f2f3a1.jpg&amp;w=3840&amp;q=75 1x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffan_head.b5f2f3a1.jpg&amp;w=3840&amp;q=75"/>
<h2>First version using relays</h2>
<hr/>
<p>After knowing how my fan works, <strong>I knew how to solve the problem using relays to simulate the three channel switch by remote control</strong>. I had experience controlling relays in Arduino with small projects then I knew how to use relays in Arduino and it is effortless, activate or deactivate by an Arduino pin.</p>
<p>I wrote a simple program to switch the relays depending on the infrared input, <a href="https://github.com/tonilopezmr/tonilopezmr.github.io/issues/26">here you can see how the infrared sensor works</a>.</p>
<div><video style="display:block;width:100%;height:auto" controls=""><source src="http://tonilopezmr.github.io/assets/article_images/2018-10-09-fun-electronics-with-fan/fan_with_relays.mp4" type="video/mp4"/></video></div>
<p>And this is how my fan looked like:</p>
<img loading="lazy" width="960" height="1280" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffirst_version_relay.b4e70e0a.jpg&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffirst_version_relay.b4e70e0a.jpg&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffirst_version_relay.b4e70e0a.jpg&amp;w=1920&amp;q=75"/>
<h2>Don&#x27;t use relays use Transistors!</h2>
<hr/>
<p><strong>I didn&#x27;t like relays because make noise</strong>, they are huge and I need three relays for the different states. After looking for a solution which replaces a relay without sound and I found the word <strong>&quot;Transistor&quot;</strong>, wow! <em>I learned a lot about transistors at the University!</em> <strong>Everything has been made with transistors</strong>, microcontrollers, computers, your coffee machine, everything has one!</p>
<p>Then I started to read a lot about it, <em>there are many transistor categories NPN, PNP, BJT, Mosfet, SCR, etc.</em> I learned about <em>BJT</em> and Mosfet at the university. After read about it I needed a <em>BJT</em> Transistor but <strong>which one <em>PNP</em> or <em>NPN</em>?</strong>.</p>
<img loading="lazy" width="658" height="362" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftransistor_schematic.df19638d.png&amp;w=750&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftransistor_schematic.df19638d.png&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftransistor_schematic.df19638d.png&amp;w=1920&amp;q=75"/>
<p>To replace a relay I needed to give <strong>+5v</strong> as an input and switch on the relay/transistor and let the current-voltage flow between <em>Collector</em> and <em>Emitter</em>, for that case <strong>I need <em>NPN</em> because with a small pulse I can open or close the switch transistor, but with <em>PNP</em> I need to apply a negative voltage to close the transistor</strong>, <a href="https://github.com/tonilopezmr/tonilopezmr.github.io/issues/27">I wrote about BJT transistors here</a></p>
<p>Then I made a small example replacing the relays by Transistors and I used leds to emulate the three different speeds.</p>
<img loading="lazy" width="1600" height="1200" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Freplace_relay_by_Transistors.fc933cba.jpeg&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Freplace_relay_by_Transistors.fc933cba.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Freplace_relay_by_Transistors.fc933cba.jpeg&amp;w=3840&amp;q=75"/>
<h2>Remote and manual control</h2>
<hr/>
<p>Okay, I can control my fan with the remote control but <strong>what about to use it with remote control and the three channel switch as manual?</strong>.
After thinking about how to separate the manual feature from a remote control feature using the Arduino. I realize I couldn&#x27;t do easily because I need to know the state of the manual mode and the remote mode for interrupting the voltage from the three channel switch when changing the speed from the remote control but the physical switch is in the channel 1.</p>
<p>Finally, I connected the switch to the Arduino using <strong>5v DC</strong> instead of <strong>220v AC</strong> and I found a problem, the switch doesn&#x27;t work correctly with low voltages and sometimes without touch the switch <strong>some output channels received 5v</strong> without select that channel.
The reason was the switch isn&#x27;t designed to work with low voltages then sometimes let the voltage fluent to other channels without selecting them.</p>
<p>I solve the problem using analog input instead of digital input, I was using the digital input to know if a channel is selected when the channel receives <strong>5v</strong> in the input, but sometimes there is <strong>5v</strong> without doing anything, then I used analog to be more precise and do a simple calculation.</p>
<pre class="language-c"><code class="language-c">boolean <span class="token function">isHigh</span><span class="token punctuation">(</span><span class="token keyword">int</span> pin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">float</span> manualFast <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> SIGNAL_QUALITY<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   manualFast <span class="token operator">=</span> manualFast <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token function">analogRead</span><span class="token punctuation">(</span>pin<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>HIGH_VOLTAGE <span class="token operator">/</span> <span class="token number">1023.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>manualFast <span class="token operator">/</span> SIGNAL_QUALITY<span class="token punctuation">)</span> <span class="token operator">==</span> HIGH_VOLTAGE<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>With this method, I calculate the average of the voltage to know if it is a <strong>HIGH</strong> (5v) or <strong>LOW</strong> (less than 3.5v) depending on the quality measurement, with this calculation if the channel isn&#x27;t selected I get <em>4.5</em> or <em>3.5</em> which means it is <em>LOW</em> and when the channel is selected I get <strong>5v</strong> all the time.</p>
<p>This is the result of combine remote control and manual.</p>
<div><video style="display:block;width:100%;height:auto" controls=""><source src="http://tonilopezmr.github.io/assets/article_images/2018-10-09-fun-electronics-with-fan/remote_and_manual_control.mp4" type="video/mp4"/></video></div>
<p><a href="https://github.com/tonilopezmr/Fun-with-Fan/blob/master/fan.cpp">Here is the code of the fan</a></p>
<h2>Real world</h2>
<hr/>
<p>It seems I finished to design my circuit and I was able to try it with my fan instead of the small leds. <strong>I needed to buy a transistor which could support high voltages and current, at least 220 volts and 16 A</strong>.</p>
<p>I bought a <a href="http://www.onsemi.com/pub/Collateral/MJE18008-D.PDF">MJE18008 NPN Transistor</a> which <strong>support 1000v</strong> !! it should be fine!, <strong>I connected the Collector and the Emitter to my home electricity and it exploited.</strong></p>
<img loading="lazy" width="1200" height="1600" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbroken_transistor.631beb0d.jpeg&amp;w=1200&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbroken_transistor.631beb0d.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbroken_transistor.631beb0d.jpeg&amp;w=3840&amp;q=75"/>
<p>Why? <em>It supports 1000v !!</em> after reading a lot about it I found the answer, <strong>A transistor it is unidirectional, not bidirectional, It doesn&#x27;t work with Alternating current!</strong> oh god. After broken two transistors, I learned the difference between <em>DC</em> and <em>AC</em>.</p>
<h2>Triac</h2>
<hr/>
<p>Triacs are the answer to my question, <em>&quot;which one is the relay substitute?&quot;</em>, the Triac!</p>
<p>A triac is two transistors in parallel in different directions to give it the bidirectional feature. <strong>The triac has the same functionality as a typical transistor but works with AC loads</strong> and there isn&#x27;t a difference between &quot;Collector&quot; and &quot;Emitter&quot;, it just calls &quot;T1&quot; and &quot;T2&quot;.</p>
<p>I bought a <a href="http://www.haopin.com/pdf/bta16-600b.pdf">BTA16-600B Triac</a> and I did the same experiment as the transistors and It didn&#x27;t exploit!. If you want to know more about Triacs, <a href="https://github.com/tonilopezmr/tonilopezmr.github.io/issues/30">I wrote about it here</a>.</p>
<h2>Control high voltages with Triac and Arduino</h2>
<hr/>
<p>I had a Triac which didn&#x27;t exploit, I had an Arduino with the program, then <strong>I only needed to connect to the 220v</strong>, yeah! Finally!</p>
<p>I was going to connect to the <strong>220v</strong> and I read about how to connect all and <strong>I saw this schematic in a video which explains that there is a dangerous part where you need to connect -5v to neutral 220v</strong>.</p>
<img loading="lazy" width="324" height="236" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftriac_dangerous_schematic.83987eac.png&amp;w=384&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftriac_dangerous_schematic.83987eac.png&amp;w=750&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftriac_dangerous_schematic.83987eac.png&amp;w=750&amp;q=75"/>
<p>I didn&#x27;t want to burn my circuit and Arduino or something like that and I started to read more about how to connect high voltages with low voltages and I found <strong>the optocoupler</strong>.</p>
<h2>Optocoupler</h2>
<hr/>
<p>You need an optocoupler when you want to control high voltages with small voltages like a microcontroller, <strong>the optocoupler will isolate the high voltages (hot side) from the low voltages(cold side).</strong></p>
<p>Then I can use it to control the fan speed using triacs in the hot side with the microcontroller pulse in the cold side, this is an example of switching on a bulb or fan with only one speed.</p>
<img loading="lazy" width="640" height="284" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftraic_with_optocoupler.884e9e7c.png&amp;w=640&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftraic_with_optocoupler.884e9e7c.png&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftraic_with_optocoupler.884e9e7c.png&amp;w=1920&amp;q=75"/>
<p>To test if it is working, I did a small circuit which uses <em>9v</em> as input with a limiter to <em>5v</em> and added a <a href="http://www.farnell.com/datasheets/97984.pdf">MOC3021 optocoupler</a> to try if I can turn on/off a bulb with the optocoupler. It worked well, then I decided to replace the bulb for my fan, and It worked too!</p>
<div><video style="display:block;width:100%;height:auto" controls=""><source src="http://tonilopezmr.github.io/assets/article_images/2018-10-09-fun-electronics-with-fan/fan_using_triac_first_time.mp4" type="video/mp4"/></video></div>
<p>If you want to know more about optocouplers, <a href="https://github.com/tonilopezmr/tonilopezmr.github.io/issues/29">I wrote it about it here</a>.</p>
<h2>Designing the circuit</h2>
<hr/>
<p>At this point, it seems I can connect my circuit with <code>220v</code> loads. Before to connect the circuit in real life I wanted to do some test with any kind of emulator to know if I could burn my circuit or if something it is wrong.</p>
<p>I installed <a href="http://fritzing.org/home/">Fritzing</a>, but it was hard to import custom components like my Triac BTA16..., I installed <a href="http://kicad-pcb.org/">Kicad</a> which is free and has a big community but it doesn&#x27;t have a simulator, but it is cool to design.</p>
<p>Finally, I found <a href="https://www.labcenter.com/">Proteus</a> which it is the big and complete software to design and simulate circuits I have seen, it has a lot of functionalities included creating invoices with the list of components you used to design your PCB.</p>
<p>It has a small problem, It isn&#x27;t supported macOS then I used <a href="http://wineskin.urgesoftware.com/tiki-index.php">wineskin</a> to install proteus in mac <a href="https://www.youtube.com/watch?v=m3S4aQQSnf8">following this video</a>.</p>
<p>After some hours in front of Proteus, I designed my circuit and PCB. I have split the circuit into two parts, the &quot;Arduino&quot; side with the microcontroller atmega328 and the rest of the circuit with the triacs and the optocouplers.</p>
<p>This is the circuit where are the triacs and the optocouplers, I have used block terminals to connect external loads like bulbs or fan wires.</p>
<img loading="lazy" width="2324" height="1202" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcircuit_hot_side.faec6151.png&amp;w=3840&amp;q=75 1x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcircuit_hot_side.faec6151.png&amp;w=3840&amp;q=75"/>
<p>Here is the microcontroller atmega328 with an L7805 limiter.</p>
<img loading="lazy" width="1640" height="1664" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcircuit_atmega328.cc0cfc60.png&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcircuit_atmega328.cc0cfc60.png&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcircuit_atmega328.cc0cfc60.png&amp;w=3840&amp;q=75"/>
<p>After that, I created the PCB connections with the design of the two parts.</p>
<img loading="lazy" width="680" height="372" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fpcb_connections.1bda2282.png&amp;w=750&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fpcb_connections.1bda2282.png&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fpcb_connections.1bda2282.png&amp;w=1920&amp;q=75"/>
<p>This is the 3d visualization of the PCBs.</p>
<img loading="lazy" width="1894" height="1318" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2F3d_pcb.01893742.png&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2F3d_pcb.01893742.png&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2F3d_pcb.01893742.png&amp;w=3840&amp;q=75"/>
<h2>Connecting the design</h2>
<hr/>
<p>After design, simulate my circuit and be sure my circuit will work, I created a test circuit with the breadboard and used bulbs instead of the fan for the fist time.</p>
<p>First, I needed to create my own Arduino board only with the atmega328 microcontroller, <a href="https://github.com/tonilopezmr/tonilopezmr.github.io/issues/32">I wrote about how to use the microcontroller and how to install it the bootloader for install any application into it</a>. I used atmega328 because it is easily to me using something I already know using the Arduino board to program the app and load it to the microcontroller. I have a plan to use another smaller microcontrollers to simplify the circuit.</p>
<p>This is how my circuit looks like:</p>
<img loading="lazy" width="1200" height="1600" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fmy_circuit_breadboard.7fed586e.jpeg&amp;w=1200&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fmy_circuit_breadboard.7fed586e.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fmy_circuit_breadboard.7fed586e.jpeg&amp;w=3840&amp;q=75"/>
<p>And this is how it works:</p>
<div><video style="display:block;width:100%;height:auto" controls=""><source src="http://tonilopezmr.github.io/assets/article_images/2018-10-09-fun-electronics-with-fan/circuit_with_220v.mp4" type="video/mp4"/></video></div>
<h2>Soldering my circuit</h2>
<hr/>
<p>I could order a PCB with my design but it would cost too much just for one PCB and I preferred to learn how to solder for future projects.</p>
<p>I started to design in the paper how to organize the tracks in the typical PCB for soldering. There isn&#x27;t too much to say, at the beginning, it is hard to solder because the tracks are very near and you don&#x27;t want to create a very big circuit. After spending some time soldering I got more experience and started to do a little bit better. <strong>I spent 10 hours soldering my circuit :(</strong>.</p>
<p>I began with the cold side and I used wires as references sometimes, this is an example.</p>
<img loading="lazy" width="1600" height="1200" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcold_side.8410d2a2.jpeg&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcold_side.8410d2a2.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcold_side.8410d2a2.jpeg&amp;w=3840&amp;q=75"/>
<p>I used sockets to replace the microcontroller or the optocouplers if something went wrong. It is useful to test your circuit too, but I learned this after.</p>
<p>My circuit front side.</p>
<img loading="lazy" width="1200" height="1600" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffront.fb31a723.jpeg&amp;w=1200&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffront.fb31a723.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffront.fb31a723.jpeg&amp;w=3840&amp;q=75"/>
<p>Back side.</p>
<img loading="lazy" width="720" height="1280" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fback.5807e068.jpeg&amp;w=750&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fback.5807e068.jpeg&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fback.5807e068.jpeg&amp;w=1920&amp;q=75"/>
<p>For the hot load, I have used wires in the front instead of solder in the back for more safety for the <em>220v</em> Line AC.</p>
<h2>It didn&#x27;t work after solder it</h2>
<hr/>
<p>After solder it, it didn&#x27;t work! :( <strong>Thanks to the multimeter, I can test it using the diode mode to know if some tracks are bad solder or something like that</strong>.</p>
<p>I did some tests with the multimeter and fixed some things I was wrong, but when I tested all with the multimeter it seems it should be ready it still not working, then I started to do a test without the microcontroller.</p>
<p><strong>I used the socket DIP28 to emulate the operation of the microcontroller giving 5v in the pin I wanted to test</strong> for example, I used the pin 13 to close a triac and I put <strong>5v</strong> in the pin 13 but the light corresponding to the pin 13 stills turned off.</p>
<p>Finally, I found the error, <strong>it was related with the two capacitors the crystal oscillator of 16MHz needs to work, I connected the input of the capacitor with the output of the same capacitor directly</strong>, then the capacitors don&#x27;t work and the oscillator neither.</p>
<h2>Protect your circuit</h2>
<hr/>
<p><strong>I was worried about how near the tracks of the hot side of my circuit are</strong>, thinking about possible short-circuit. I found a <a href="https://electronicagimeno.com/aislarco-2-barniz-de-uretano-pcb-250ml">Protective Layer polyurethane insulation</a> to isolate the circuit tracks.</p>
<p>You just need to spray it on the tracks.</p>
<img loading="lazy" width="1600" height="1200" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fprotect.7dc99905.jpeg&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fprotect.7dc99905.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fprotect.7dc99905.jpeg&amp;w=3840&amp;q=75"/>
<p>Sorry for the bad quality :(</p>
<h2>Design the circuit enclosure</h2>
<hr/>
<p><strong>I wanted to create an enclosure to my circuit because it is very dangerous to connect that circuit without protection</strong>, then I decided to install <a href="https://www.autodesk.com/products/fusion-360/overview">Fusion 360</a> and start to design my enclosure.</p>
<p><strong>I tried to create my circuit smaller to put inside the current structure of my fan</strong> but it was impossible creating a circuit soldering with three triacs and the small structure of the fan.</p>
<p><strong>I added my circuit into the Fusion 360</strong> to know it will fit into my enclosure and has an example to create the base. I added it without all the details because I only need the rectangle and the blocks as reference.</p>
<img loading="lazy" width="1816" height="1140" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcircuit_fusion.cf3bee3a.png&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcircuit_fusion.cf3bee3a.png&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcircuit_fusion.cf3bee3a.png&amp;w=3840&amp;q=75"/>
<p><strong>The base it was designed to put the circuit already connected with the wires</strong>, it is easy to manipulate the circuit, I added small parts to hold the circuit in the base.</p>
<img loading="lazy" width="1852" height="1228" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fenclosure_base.3b6a0a47.png&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fenclosure_base.3b6a0a47.png&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fenclosure_base.3b6a0a47.png&amp;w=3840&amp;q=75"/>
<p>The lid just has four holes to put the screws and some parts without wall to assemble with the wires already connected to the circuit.</p>
<img loading="lazy" width="1762" height="998" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flid.b7e8da9e.png&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flid.b7e8da9e.png&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flid.b7e8da9e.png&amp;w=3840&amp;q=75"/>
<p>This is the final result, this is the enclosure open.</p>
<img loading="lazy" width="3096" height="4128" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fenclosure.fb8151e4.jpg&amp;w=3840&amp;q=75 1x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fenclosure.fb8151e4.jpg&amp;w=3840&amp;q=75"/>
<p>and here is closed, note that there is space for the wires.</p>
<img loading="lazy" width="2454" height="1402" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fclosed_enclosure.225bd67a.png&amp;w=3840&amp;q=75 1x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fclosed_enclosure.225bd67a.png&amp;w=3840&amp;q=75"/>
<p>I have learned a lot about modeling in 3D in fusion, I have made another enclosure after this one for other projects that I will show you here :D.</p>
<h2>Enclosure printing</h2>
<hr/>
<p>Well, It was time to print the enclosure, I didn&#x27;t know how to use a 3d printer (I bought <a href="https://es.gearbest.com/3d-printers-3d-printer-kits/pp_1845898.html?wid=1433363&amp;currency=EUR&amp;vip=15756104&amp;gclid=EAIaIQobChMI4-yE-baq3gIVTrftCh1KQAHdEAQYASABEgK4HPD_BwE">Ender 3 printer</a> for print the enclosure, and of course for future projects...) but after spending some time printing examples to not waste too much filament,</p>
<p><strong>I send the 3d design from Fusion 360 to <a href="https://ultimaker.com/en/products/ultimaker-cura-software">Cura</a></strong> which is the software to configure the 3d models to 3d printer commands like hot the nozzle 200º, start in the point x and y, etc. You can sort the components to the bed printer as well, change the position 90º or anything else.</p>
<img loading="lazy" width="1522" height="1622" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcura_enclosure.4e904251.png&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcura_enclosure.4e904251.png&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcura_enclosure.4e904251.png&amp;w=3840&amp;q=75"/>
<p>I send the file to my printer and wait for the result.</p>
<div><video style="display:block;width:100%;height:auto" controls=""><source src="http://tonilopezmr.github.io/assets/article_images/2018-10-09-fun-electronics-with-fan/printing_enclosure.mp4" type="video/mp4"/></video></div>
<p>After 8 hours, this was the result.</p>
<img loading="lazy" width="3096" height="4128" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fenclosure.fb8151e4.jpg&amp;w=3840&amp;q=75 1x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fenclosure.fb8151e4.jpg&amp;w=3840&amp;q=75"/>
<h2>Assemble</h2>
<hr/>
<p>I have the circuit and enclosure, then I can start to assemble it to the fan. <strong>I assemble the three channel switch with a connector to the circuit.</strong></p>
<img loading="lazy" width="1600" height="1200" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fassemble_switch.b2a91f54.jpeg&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fassemble_switch.b2a91f54.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fassemble_switch.b2a91f54.jpeg&amp;w=3840&amp;q=75"/>
<p>Add the circuit to the base to connect the wires, <strong>I needed to cut a little bit the PCB to fit into the base, I did a bad measurement</strong> just a few millimeters, I don&#x27;t have an excellent tool for measurement.</p>
<img loading="lazy" width="1200" height="1600" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcircuit_in_base.a84be3e6.jpeg&amp;w=1200&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcircuit_in_base.a84be3e6.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcircuit_in_base.a84be3e6.jpeg&amp;w=3840&amp;q=75"/>
<p>Connect the fan wires, connect the infrared receiver, and connect two wires to the 9v power supply (In this example a battery).</p>
<img loading="lazy" width="1600" height="1200" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbase_with_wires.3f9e3dcc.jpeg&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbase_with_wires.3f9e3dcc.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbase_with_wires.3f9e3dcc.jpeg&amp;w=3840&amp;q=75"/>
<p>Then after screw-down, I tried that all it is working correctly.</p>
<div><video style="display:block;width:100%;height:auto" controls=""><source src="http://tonilopezmr.github.io/assets/article_images/2018-10-09-fun-electronics-with-fan/circuit_and_fan.mp4" type="video/mp4"/></video></div>
<p>I finished assembling the enclosure and I just need to attach it to my fan.</p>
<img loading="lazy" width="1200" height="1600" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fscrew-down_enclosure.49c95131.jpeg&amp;w=1200&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fscrew-down_enclosure.49c95131.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fscrew-down_enclosure.49c95131.jpeg&amp;w=3840&amp;q=75"/>
<p><strong>This is the final result</strong>, I have put the Infrared receiver behind the fan then when you are looking at the front of it you don&#x27;t see the sensor. I have attached the enclosure with adhesive because <strong>it is not to be the final enclosure for the next summer then I just add adhesive</strong>.</p>
<img loading="lazy" width="1200" height="1600" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffinal_result.30e887f9.jpeg&amp;w=1200&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffinal_result.30e887f9.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffinal_result.30e887f9.jpeg&amp;w=3840&amp;q=75"/>
<p><strong>Right now the microcontroller needs a 9v battery to work, I have planned to add an AC-DC converter</strong>, I have already one, but I prefer to use in the second version of my fan.</p>
<h2>Conclusions</h2>
<hr/>
<p><strong>I learned a lot from my first version to the last one.</strong> It was an excellent experience from zero knowledge to being able of doing something like this and I will continue working on this kind of projects to more fun.</p>
<p>At the end I did some changes to my circuit, I used different connectors on the cold side like removing the block for the analog input, removing the infrared wires soldered directly to the circuit, I cut one hole to my enclosure for the cold side wires, I use nail polish to improve the isolation in the hot side.</p>
<img loading="lazy" width="900" height="1600" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffirst_version.ca7df931.jpeg&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffirst_version.ca7df931.jpeg&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffirst_version.ca7df931.jpeg&amp;w=1920&amp;q=75"/>
<p>First version</p>
<img loading="lazy" width="1200" height="1600" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsecond_version.1bc3468f.jpeg&amp;w=1200&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsecond_version.1bc3468f.jpeg&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsecond_version.1bc3468f.jpeg&amp;w=3840&amp;q=75"/>
<p>Second version</p>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[Grade Calculator turns 3 years old]]></title>
            <link>undefined/articles/calcula-notas-cumple-3-anyos</link>
            <guid>undefined/articles/calcula-notas-cumple-3-anyos</guid>
            <pubDate>Wed, 28 Sep 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[Grade Calculator turns 3 years old.]]></description>
            <content:encoded><![CDATA[<p>When I presented the second version of <a href="http://tonilopezmr.github.io/calculanotas">Grade Calculator</a>, I added a section of improvements mentioning features that could be added, and that&#x27;s what&#x27;s new in the 3rd version. I also promised for version 3 that people would be able to share subjects between them, but that hasn&#x27;t been possible yet. I also talked about a web version that won&#x27;t see the light for now at least, but there is a surprise...</p>
<p>Between version 2 and version 3, I added a new functionality to be able to log in and have your subjects always with you in the cloud, so even if you change phones you can access your subjects.</p>
<p>In this version, <strong>I removed the <em>DrawerLayout</em> (the sliding side bar) and added a Bottom Bar</strong>, similar to <a href="https://play.google.com/store/apps/details?id=com.google.android.apps.social.spaces&amp;referrer=utm_source%3Dlandingpage">Spaces</a> because it perfectly suits the functionalities of <a href="http://tonilopezmr.github.io/calculanotas">Grade Calculator</a>, where you need to add subjects and evaluation groups, and besides, the button was already in the center before, which is great.</p>
<p>In the post about version 2 of <a href="http://tonilopezmr.github.io/calculanotas">Grade Calculator</a>, I also said that removing the <em>DrawerLayout</em> improved the UX and I made <a href="https://plus.google.com/+antoniolopezmarin/posts/5vDGjb7f6Pw">a survey</a> to see if <a href="http://tonilopezmr.github.io/calculanotas">Grade Calculator</a> version 2 was better than the new version. While I was expecting people to vote for the new version, suddenly everyone loves the <em>DrawerLayout</em>. However, given its functionality and how it&#x27;s used, with the new design, everything is clearer and easier to use with one finger.</p>
<h2>Profile</h2>
<img loading="lazy" width="480" height="800" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fprofile.aa4835d1.png&amp;w=640&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fprofile.aa4835d1.png&amp;w=1080&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fprofile.aa4835d1.png&amp;w=1080&amp;q=75"/>
<p>The profile screen is the same screen that appears when you slid the <em>DrawerLayout</em>, showing your list of subjects and account information.</p>
<h2>Subject</h2>
<img loading="lazy" width="480" height="800" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsubject.94cc9f99.png&amp;w=640&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsubject.94cc9f99.png&amp;w=1080&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsubject.94cc9f99.png&amp;w=1080&amp;q=75"/>
<p>This is the same screen that showed a subject with its list of evaluation groups.</p>
<p>Changing subjects is now faster and easier to use, with everything at hand.</p>
<p>It&#x27;s still pending for the future to be able to share subjects since it would be great if someone could create a subject with their rules and share it with an entire class, but for now we have to settle for thinking that you have VIP functionality if you&#x27;re in my Computer Engineering course at UPV ;)</p>
<p>You can download <a href="http://tonilopezmr.github.io/calculanotas">Grade Calculator</a> and let me know what you think.</p>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[How to do inheritance objects in python]]></title>
            <link>undefined/articles/how-to-do-inheritance-in-python</link>
            <guid>undefined/articles/how-to-do-inheritance-in-python</guid>
            <pubDate>Sun, 14 Feb 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[How to do inheritance objects in python.]]></description>
            <content:encoded><![CDATA[<p>Few days ago, my friend <a href="https://twitter.com/srgtrujillo">Sergio Trujillo</a> told me how are the objects in python. All this began in this <a href="https://github.com/srgtrujillo/python-poo/issues/1">issue in github</a>, I made two questions:</p>
<ul>
<li>
<p>Could you show me a simple inheritance code in python?</p>
</li>
<li>
<p>How can I do a utility class in python?</p>
</li>
</ul>
<p><strong>he answered this:</strong></p>
<p>Hello <a href="https://github.com/tonilopezmr">@tonilopezmr</a>, first I&#x27;ll give you a brief explanation of inheritance in Python, doing a little comparison with the Java language.</p>
<p>As in the Java language, all objects inherit from the Object class. However there are some minor differences. In the Python language there is multiple inheritance and interfaces not exists as such. To achieve the same effect as Java interfaces, you can create classes that inherit from other abstract classes. You can find more information in <a href="https://docs.python.org/2.7/tutorial/classes.html#inheritance">Python 2.7 doc</a></p>
<p>This is a sample for simple inheritance:</p>
<pre class="language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">InterfaceClass</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">do_something_1</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> NotImplementedError<span class="token punctuation">(</span><span class="token string">&quot;Should have implemented this&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">do_something_2</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> NotImplementedError<span class="token punctuation">(</span><span class="token string">&quot;Should have implemented this&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">AbstractClass</span><span class="token punctuation">(</span>InterfaceClass<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">do_something_1</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
            Implementation
        &quot;&quot;&quot;</span>
        <span class="token keyword">return</span> <span class="token number">1</span>

    <span class="token keyword">def</span> <span class="token function">do_something_2</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
            Implementation
        &quot;&quot;&quot;</span>
        <span class="token keyword">return</span> <span class="token number">2</span>

    <span class="token keyword">def</span> <span class="token function">do_something_3</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> NotImplementedError<span class="token punctuation">(</span><span class="token string">&quot;Should have implemented this&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">ConcreteClass</span><span class="token punctuation">(</span>AbstractClass<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">do_something_3</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
            Implementation
        &quot;&quot;&quot;</span>
        <span class="token keyword">return</span> <span class="token number">3</span>
</code></pre>
<p>In response to your question,</p>
<ul>
<li>How can I do a utility class in python?</li>
</ul>
<p>what is usually done in Python is to create a module, which is not a class, it is a simple Python file containing all utility functions. Then you can import the module into any other implementation and use these functions. For example:
I have the package <em>utility_module</em> with 2 files; <em>math_functions.py</em> and <em>_<em>init_</em>.py</em>:</p>
<p><em>_<em>init_</em>.py</em>:</p>
<pre class="language-python"><code class="language-python"><span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> math_functions
math_functions<span class="token punctuation">.</span>py<span class="token punctuation">:</span>

<span class="token keyword">def</span> <span class="token function">factorial</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token keyword">or</span> n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">&quot;n is not integral or is negative&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> n <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token number">1</span> <span class="token keyword">or</span> n <span class="token operator">*</span> factorial<span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token keyword">or</span> n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">&quot;n is not integral or is negative&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">0</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token number">1</span> <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">else</span> fibonacci<span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> fibonacci<span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre>
<p>Any implementation can import the module and use its functions. For example:</p>
<pre class="language-python"><code class="language-python"><span class="token keyword">from</span> utility_module <span class="token keyword">import</span> math_functions
<span class="token keyword">from</span> utility_module<span class="token punctuation">.</span>math_functions <span class="token keyword">import</span> fibonacci

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#x27;__main__&#x27;</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span> <span class="token string">&quot;7! = &quot;</span><span class="token punctuation">,</span> math_functions<span class="token punctuation">.</span>factorial<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span> <span class="token string">&quot;fibonacci(8) = &quot;</span><span class="token punctuation">,</span> fibonacci<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
</code></pre>
<p>You can find more information about Python modules and packages in <a href="https://docs.python.org/2/tutorial/modules.html">Python tutorials</a></p>
<hr/>
<p>Don&#x27;t forget that you can see the <a href="https://github.com/srgtrujillo/python-poo/issues/1">issue here</a></p>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[¡Qué fácil desplegar con Heroku y Spark!]]></title>
            <link>undefined/articles/que-facil-desplegar-con-heroku</link>
            <guid>undefined/articles/que-facil-desplegar-con-heroku</guid>
            <pubDate>Sun, 07 Feb 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[Explicación de cómo desplegar Spartk usando Heroku.]]></description>
            <content:encoded><![CDATA[<p>Antes de leer el post, si no conoces los siguientes productos consultarlos antes:</p>
<ul>
<li><a href="https://heroku.com/">Heroku</a></li>
<li><a href="http://sparkjava.com/">Spark Java Framework</a></li>
<li><a href="https://www.openshift.com/?sc_cid=70160000000UJArAAO&amp;gclid=CNqIxb2R5soCFVIYGwod6BgFkg">Openshift</a></li>
<li><em><a href="http://tonilopezmr.github.io/calculanotas">Calcula Notas</a></em></li>
</ul>
<hr/>
<p>Después de un intento fallido de desplegar el <a href="https://es.wikipedia.org/wiki/Representational_State_Transfer">API REST</a> hecho con <a href="http://sparkjava.com/">Spark Java Framework</a> de <em><a href="http://tonilopezmr.github.io/calculanotas">Calcula Notas</a></em> en <a href="https://www.openshift.com/?sc_cid=70160000000UJArAAO&amp;gclid=CNqIxb2R5soCFVIYGwod6BgFkg">Openshift</a>, <strong>he conseguido hacerlo con <a href="https://heroku.com/">Heroku</a> mucho más fácil</strong>.</p>
<h2>¿Por qué Spark Java?</h2>
<p>Muy sencillo, porque <a href="http://sparkjava.com/">Spark Java</a> es un <a href="https://es.wikipedia.org/wiki/Framework">framework</a> muy ligero para hacer aplicaciones web muy <strong>facilmente y rapido con <a href="https://www.java.com/es/download/faq/java8.">Java 8</a></strong>, ya que por temas de universidad y que quería centrarme en añadir una nueva funcionalidad en <em><a href="http://tonilopezmr.github.io/calculanotas">Calcula Notas</a></em>, lo he hecho con Java, porque es el lenguaje que ya conozco y en el que podía hacer una aplicación chula con acceso a la base de datos, etc.  Es lo que he estado haciendo en el grado superior una y otra vez.</p>
<h2>Openshift</h2>
<p><strong>Esta muy bien</strong>, pero no era la mejor solución para lo que yo tenía creado, ya que tenía que hacer funcionar un <a href="http://www.eclipse.org/jetty/">Jetty Java Web Server</a> y el <a href="https://blog.openshift.com/jetty-on-openshift-lightweight-java-web-serving-for-the-cloud/">tutorial de Openshift estaba más que desfasado</a>.</p>
<ol>
<li>El link de descarga del servidor jetty de un fichero de configuración ya no existía.</li>
<li>No conseguí cambiar la versión de java7 del servidor a java8.</li>
<li>Probé con <a href="https://github.com/openshift-quickstart/jetty-openshift-quickstart/network">múltiples fork</a> del <a href="https://github.com/openshift-quickstart/jetty-openshift-quickstart">código de ejemplo original</a>.</li>
</ol>
<p>Resumiendo, perdí demasiado tiempo y me pase a probar <a href="https://heroku.com/">Heroku</a>.</p>
<h2>Heroku</h2>
<p>Para mi gusto, <strong>mucho mejor documentado</strong>. Esta solución ya la conocía de entrada, porque en los tutoriales que existen en la página oficial de spark ya te dicen <a href="https://sparktutorials.github.io/2015/08/24/spark-heroku.html">como desplegar en heroku</a>.</p>
<h3>¡¡Comencemos!!</h3>
<p>Primero seguí el <a href="https://devcenter.heroku.com/articles/getting-started-with-java#introduction">tutorial de Heroku</a> mientras miraba el otro <a href="https://sparktutorials.github.io/2015/08/24/spark-heroku.html">tutorial de Spark con Heroku</a>, este último no lo recomiendo para nada, porque lo único que hizo fue confundirme.</p>
<p>Si sigues el tutorial paso a paso, todo debería ir bien, <strong>PERO</strong> de todas formas por si no funciona, como me pasó a mí, voy a explicar los pequeños cambios que hice para que funcionara bien.</p>
<h3>Instalar heroku</h3>
<p>Al instalar <a href="https://heroku.com/">Heroku</a> y <a href="https://maven.apache.org/">Maven</a> me daba fallo de que no encontraba el jdk de java8, así que puse lo siguiente:</p>
<pre class="language-shell"><code class="language-shell"><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/Library/Java/JavaVirtualMachines/jdk1.8.0_<span class="token punctuation">{</span>mi-version-java<span class="token punctuation">}</span>.jdk/Contents/Home
</code></pre>
<h3>Procfile y MVN files</h3>
<p>Añadir al proyecto los siguiente ficheros tal cual:</p>
<ul>
<li><a href="https://github.com/heroku/java-getting-started/blob/master/Procfile">Procfile</a></li>
<li><a href="https://github.com/heroku/java-getting-started/blob/master/system.properties">system.properties</a></li>
<li><a href="https://github.com/heroku/java-getting-started/blob/master/mvnw">mvnw</a></li>
<li><a href="https://github.com/heroku/java-getting-started/blob/master/mvnw.cmd">mvnw.cmd</a></li>
</ul>
<h3>Actulazar Maven a 3.3</h3>
<pre class="language-xml"><code class="language-xml">	<span class="token comment">&lt;!-- Maven build --&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optimize</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optimize</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>debug</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>debug</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-dependency-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>copy-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">&gt;</span></span>package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>copy-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>
</code></pre>
<p><strong>Cambiar la versión Maven build en el fichero <a href="https://github.com/heroku/java-getting-started/blob/master/pom.xml">POM.xml</a> que nos dan en el <a href="https://github.com/heroku/java-getting-started/">código de ejemplo de Heroku</a> por 3.3.</strong></p>
<hr/>
<p>Y eso es todo, después añadí un addon como dice en el tutorial para postgresql gratis y <a href="https://devcenter.heroku.com/articles/heroku-postgresql#connecting-in-java">puse el jdbc en mi proyecto</a>.
Todos los comandos heroku para desplegar, hacer push al server, ver los datos de postgresql y ver los logs del servidor esta muy bien comentado en su <a href="https://sparktutorials.github.io/2015/08/24/spark-heroku.html">tutorial</a>.</p>
<hr/>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[Una forma de implementar Login en Android]]></title>
            <link>undefined/articles/login-en-android</link>
            <guid>undefined/articles/login-en-android</guid>
            <pubDate>Wed, 03 Feb 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[Explicaión de cómo implementar Login en Android.]]></description>
            <content:encoded><![CDATA[<p>Ahora que estoy implementando el Login en <a href="http://tonilopezmr.github.io/calculanotas">Calcula Notas</a>, voy a explicar cómo lo hago de forma que sea fácil de implementar en otras aplicaciones futuras, <strong>no es una librería</strong> pero sí una forma de hacerlo para que <em>“funcione solo”</em> más o menos.</p>
<p>En este post <strong>no voy a explicar como usar la API de autenticación en Twitter, Facebook o Google</strong>, sino que voy a explicar como yo los uso.</p>
<p>Todo el código esta incluido en <a href="https://github.com/tonilopezmr/Android-Examples">Android-Examples</a> en el modulo <a href="https://github.com/tonilopezmr/Android-Examples/tree/master/login">login</a>.</p>
<h2>Abstract class SignInActivity</h2>
<hr/>
<p>Es una <em>actividad abstracta</em> de la que habrá que <strong>extender en nuestra actividad de login</strong>, esta actividad es la encargada de inicializar los proveedores que se va a usar y la que los va a manejar. Resumiendo, lo que viene a ser todo el código que usa las API de cada proveedor y que luego no vas a ver en tu actividad de login.</p>
<p>De esta forma tu actividad de Login con los botones, etc… solo se preocupe de los componentes de la vista, mostrar ocultar cosas, etc…</p>
<p>Esto lo aprendí de <a href="https://github.com/JorgeCastilloPrz">JorgeCastilloPrz</a> un repositorio que tenía llamado Mirage.</p>
<h2>SignInManager</h2>
<hr/>
<p><strong>Es el encargado de manejar las preferencias del teléfono</strong>, la que manejara si ya se han logeado anteriormente en el móvil, <strong>y con qué proveedor se han logueado</strong> para luego poder manejarlo. <em>Es una instancia estática</em> que podrá ser usada en cualquier momento y que deberá haber sido inicializada siempre al comienzo de la aplicación, de esta forma, ya podrá ser usada en el resto de la aplicación.</p>
<h2>Providers</h2>
<hr/>
<p><strong>Son clases que usan la API de cada proveedor</strong>, es la que conecta y desconecta, donde se devuelve el usuario de cada uno.
<em>Estos proveedores están fuertemente ligados a SignInActivity</em>, esto es una desventaja ya que deberían de ser independientes uno de otros, pero por tema de tiempo aun no los he desacoplado (se haría con una interfaz), en mi <a href="https://github.com/tonilopezmr/Android-Examples">código de ejemplo</a>. <strong>Sería interesante que hicierais un pull request a el repositorio ;)</strong></p>
<p>La ventaja de crear clases <em>Providers</em> es que si quieres añadir un nuevo provider en tu login, por ejemplo <em>instagram provider</em>, tan solo sería crear una clase que usa la API de instagram, <strong>implementar la interfaz Provider</strong> y integrarla en <em>SignInActivity y SignInManager</em>.</p>
<h2>SignInView</h2>
<hr/>
<p><strong>Es la interfaz que implementa SignInActivity</strong>, estos metodos en un principio estaban abstractos dentro de dicha <em>SignInActivity</em>, pero para poder desacoplarla entre los providers y la actividad, como he comentado anteriormente, he creado la interfaz <em>SignInView</em> <strong>que no utiliza de momento los providers</strong> pero que ahí esta la idea de separar la actividad de las clase <em>Providers</em>.</p>
<h2>UserProfile</h2>
<hr/>
<p><strong>Es el modelo de usuario que voy a usar en mi aplicación</strong>, con mis necesidades, <em>si necesitas más información de un usuario habría que cambiar el modelo y donde lo use</em>. Lo ideal sería crear un modelo de usuario para el login, común para todos los proveedores con la máxima información que podría interesar y luego transformarlo a nuestro usuario, de forma que no haya que cambiar el usuario que se obtiene en el login.</p>
<p><em>¡¡Queda más claro si le echas un vistazo al codigo de ejemplo!!</em></p>
<p><strong>El código esta incluido en <a href="https://github.com/tonilopezmr/Android-Examples">Android-Examples</a> en el modulo <a href="https://github.com/tonilopezmr/Android-Examples/tree/master/login">login</a>.</strong></p>
<hr/>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[Facemash UPV was nice while it lasted]]></title>
            <link>undefined/articles/facemash-was-nice</link>
            <guid>undefined/articles/facemash-was-nice</guid>
            <pubDate>Wed, 11 Nov 2015 00:00:00 GMT</pubDate>
            <description><![CDATA[Facemash website for UPV University.]]></description>
            <content:encoded><![CDATA[<p>Well, after having a lot of fun looking at university photos on <a href="http://tonilopezmr.github.io/facemash/">Facemash UPV</a>, <strong>the images have been made private</strong>, meaning they removed permissions and now return the &#x27;default&#x27; gray image :(</p>
<h2>Is there a solution? Could facemash keep working?</h2>
<ul>
<li><del>No</del> Yes</li>
</ul>
<h2>But would it be legal?</h2>
<ul>
<li><del>Yes</del> honestly I&#x27;m not sure, probably not.</li>
</ul>
<p>The quickest solution would be to do something similar to what our friend <a href="https://en.wikipedia.org/wiki/Mark_Zuckerberg">Mark</a> did, download all the university images and host them with my own links.</p>
<img alt="Private images downloaded from UPV" loading="lazy" width="1332" height="700" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffaces.43dbbd3a.png&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffaces.43dbbd3a.png&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffaces.43dbbd3a.png&amp;w=3840&amp;q=75"/>
<p><strong>There are other ways</strong>, but I don&#x27;t want trouble with the university <del>and besides I already managed to promote <a href="http://tonilopezmr.github.io/calculanotas/">Grade Calculator</a></del>.</p>
<p>The thing is that after it was published on the <a href="https://www.facebook.com/El-informer-UPV-195757263903995/timeline">Facebook informer</a> that Facemash existed, there was a flood of requests to the website, nowhere near what happened with the <a href="https://en.wikipedia.org/wiki/History_of_Facebook#Facemash">original Facemash</a> but still quite a lot.</p>
<p>Now that it&#x27;s all over, I thought it would be a good idea to share the statistical results.</p>
<p>I published <a href="http://tonilopezmr.github.io/facemash/">Facemash UPV</a> on Sunday November 8th, it received more than <strong>1030 sessions</strong> which is not the same as <strong>1030 users</strong> or <strong>1030 page views</strong>, each user can generate multiple sessions, so naturally there were fewer users, specifically <strong>981 users</strong>.</p>
<img alt="October 8th at 23:16:21" loading="lazy" width="1155" height="714" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Factive_users_23.16.21.ca9d4cc9.png&amp;w=1200&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Factive_users_23.16.21.ca9d4cc9.png&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Factive_users_23.16.21.ca9d4cc9.png&amp;w=3840&amp;q=75"/>
<p>The peak day was Monday November 9th with <strong>1876 users</strong>, when people who saw it on Sunday shared it with their classmates.</p>
<h2>Reports, 2 and a half days</h2>
<hr/>
<img alt="General overview up to now." loading="lazy" width="1169" height="246" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftotal_est.ab7cdbd2.png&amp;w=1200&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftotal_est.ab7cdbd2.png&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftotal_est.ab7cdbd2.png&amp;w=3840&amp;q=75"/>
<p>This screenshot is from right now on the 11th although the data is always from a few hours later, it&#x27;s still receiving visits now.</p>
<p>Finally <strong>19546 page views</strong> and <strong>3930 users</strong>, what surprises me is the amount of time people spent looking at photos, with an average session duration of <strong>00:04:01</strong>.</p>
<p>Of these 19546 page views, <strong>2353</strong> went to the <a href="http://tonilopezmr.github.io/calculanotas/">Grade Calculator</a> page.</p>
<h2>Countries and cities</h2>
<hr/>
<img alt="Left countries, right Cities." loading="lazy" width="813" height="290" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcountry.f8794646.jpg&amp;w=828&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcountry.f8794646.jpg&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcountry.f8794646.jpg&amp;w=1920&amp;q=75"/>
<p>The page has been viewed in <strong>29 countries</strong>, most notably from the European Union, but also from Vietnam, Brazil, Argentina, etc. Probably Erasmus students or people who have been here.</p>
<h2>Gender and age</h2>
<hr/>
<img alt="Gender and age." loading="lazy" width="974" height="366" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fages.1b510ce7.png&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fages.1b510ce7.png&amp;w=2048&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fages.1b510ce7.png&amp;w=2048&amp;q=75"/>
<p><a href="http://www.reactiongifs.us/wp-content/uploads/2013/11/brent_rambo_approves.gif">More men</a> visited with 61% compared to women at 39%. 65% were between <strong>18-24 years old</strong> as expected, and new users were more in the 25-54 range. Although the data isn&#x27;t exact since it comes from a 23% sample of total sessions.</p>
<h2>Device</h2>
<hr/>
<img alt="Devices." loading="lazy" width="1001" height="331" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fdevices.19338f37.png&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fdevices.19338f37.png&amp;w=2048&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fdevices.19338f37.png&amp;w=2048&amp;q=75"/>
<p>Not much to say about what kind of devices accessed <a href="http://tonilopezmr.github.io/facemash/">Facemash UPV</a>, most visits were from the university.</p>
<h2>Mobile operating systems</h2>
<hr/>
<img alt="Mobile Devices." loading="lazy" width="1004" height="324" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fmobile_so.31efca55.png&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fmobile_so.31efca55.png&amp;w=2048&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fmobile_so.31efca55.png&amp;w=2048&amp;q=75"/>
<p>Something I&#x27;m very interested in is knowing which mobile operating systems viewed the page since <a href="http://tonilopezmr.github.io/calculanotas/">Grade Calculator</a> is currently only on <a href="https://www.android.com/intl/es_es/">Android</a> but will <strong>soon be available for</strong> <a href="http://www.apple.com/es/ios/">IOS</a>.</p>
<h2>SEO</h2>
<hr/>
<p>When I made <a href="http://tonilopezmr.github.io/facemash/">Facemash UPV</a> I made it <strong>as messy as possible</strong>, I mean messy in that if you download the HTML source code it&#x27;s awful, HTML tables with CSS inline in each tag and JavaScript code visible showing how it got the images, although <a href="https://developers.google.com/speed/pagespeed/insights/?url=http%3A%2F%2Ftonilopezmr.github.io%2Ffacemash">PageSpeed Insights</a> didn&#x27;t give me too bad a score.</p>
<p>All this to see if with visits, even with a ****** page, Google would rank it among the first results.</p>
<a href="https://www.google.es/#q=facemash+upv"><img alt="Google search for Facemash UPV." loading="lazy" width="1536" height="930" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgoogle_facemash_upv.eeed5ee3.png&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgoogle_facemash_upv.eeed5ee3.png&amp;w=3840&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgoogle_facemash_upv.eeed5ee3.png&amp;w=3840&amp;q=75"/></a>
<p>At first, it only showed in <strong>1st position</strong> the post with better content without directly showing the <a href="https://tonilopezmr.github.io/facemash">tonilopezmr.github.io/facemash</a> URL, but now if you search it appears in 2nd position since Google <strong>rewards visits and duration much more</strong>.</p>
<p>I thought it would never put me so high up, <strong>the important thing is that <a href="https://tonilopezmr.github.io">tonilopezmr.github.io</a> now appears 1st</strong> and <a href="http://tonilopezmr.github.io/calculanotas/">Grade Calculator</a> is now in the <strong>top positions</strong> on <a href="https://play.google.com/store/search?q=calcula%20notas&amp;c=apps&amp;docType=1&amp;sp=CAFiDwoNY2FsY3VsYSBub3Rhc3oFGADAAQKKAQIIAQ%3D%3D%3AS%3AANO1ljL8bhE&amp;hl=es">Google Play</a>.</p>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[FACEMASH UPV]]></title>
            <link>undefined/articles/facemash-upv</link>
            <guid>undefined/articles/facemash-upv</guid>
            <pubDate>Sat, 07 Nov 2015 00:00:00 GMT</pubDate>
            <description><![CDATA[Facemash website for UPV University.]]></description>
            <content:encoded><![CDATA[<blockquote>
<p>I just published it and I know not everyone will like it but it&#x27;s not illegal, it&#x27;s the university&#x27;s fault that everyone can see it.</p>
</blockquote>
<p>I obtained all the profile images from UPV since its foundation and created <a href="https://tonilopezmr.github.io/facemash">Facemash UPV</a>.</p>
<h2>Why?</h2>
<p>Since I&#x27;m in my <strong>second year of computer science</strong>, <del><a href="https://tonilopezmr.github.io/calculanotas">and I wanted to promote the Grade Calculator app</a></del>, I thought it would be fun to pay a small tribute to my friend <a href="https://en.wikipedia.org/wiki/Mark_Zuckerberg">Mark</a> who did the same thing but with stolen images from private profiles, <strong>I didn&#x27;t do that, I&#x27;ll explain later</strong>.</p>
<p>I wanted to make it as similar as possible to the one from <a href="http://www.filmaffinity.com/en/film577699.html">The Social Network</a> movie that they show so much during the welcome days:</p>
<img loading="lazy" width="960" height="399" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffacemash_movie.58ac9643.jpg&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffacemash_movie.58ac9643.jpg&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffacemash_movie.58ac9643.jpg&amp;w=1920&amp;q=75"/>
<p>vs</p>
<img loading="lazy" width="500" height="350" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffacemash-image.1d919216.png&amp;w=640&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffacemash-image.1d919216.png&amp;w=1080&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffacemash-image.1d919216.png&amp;w=1080&amp;q=75"/>
<h2>How?</h2>
<p>Well, it was <strong>very easy</strong>. I knew you could see all the university photos in my <strong>first year</strong> when I entered, but it was in this second year when I found a use for it.</p>
<p>Well, if you want a summary of <strong>how I did it</strong>, here you can see the fun version:</p>
<p><a href="https://www.youtube.com/watch?v=f8AuB5hPiCk"><img src="http://img.youtube.com/vi/f8AuB5hPiCk/0.jpg" alt=""/></a></p>
<p>Now <strong>seriously</strong>, you take your profile picture and notice that the URL is <a href="https://intranet.upv.es/foto/get/52873099.gif">http://intranet.upv...../numbers.gif</a> and you keep changing the numbers and <strong>EUREKA!</strong>, <strong>anyone can see the images in UPV</strong> and <strong>it&#x27;s not a problem</strong> because you can see your classmates&#x27; photos in the intranet (class photos) etc.</p>
<p>Now we just need to <strong>automate it</strong> and create an HTML page that changes the URLs. To make it as simple as possible and make the page very fast at loading photos since we only need to change the numbers, I <strong>developed</strong> a program that increases the numbers and saves them in a <strong>file</strong>, so I don&#x27;t have to find an image every time I want to change it, etc.</p>
<p>The problem is that the number is veeeery <strong>large</strong> and in most combinations <strong>there is no image</strong> and you get an ugly gray one :(.
<strong>Problem solved</strong>, when it doesn&#x27;t find a profile image, it shows an image that is always the same and even smaller, so it always weighs the same (bytes), specifically <strong>5372 bytes</strong>. Any images that were different from the faceless image, I just don&#x27;t add them to the file and that&#x27;s it.</p>
<p>So I left it running for a while and when I had <strong><del>9840</del>14185 different numbers</strong> I stopped because otherwise there are too many faces and people can&#x27;t find themselves!</p>
<p>The HTML with a bit of javascript so the client does all the work and it displays without loading, very fast.</p>
<p>Here&#x27;s the magic code:</p>
<pre class="language-java"><code class="language-java">    <span class="token comment">// Code for collect facebooks in a file</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> cont <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">53177199</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">99999999</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">PrintWriter</span> printWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrintWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;faces&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> urlPath <span class="token operator">=</span> <span class="token string">&quot;https://intranet.upv.es/foto/get/&quot;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&quot;.gif&quot;</span><span class="token punctuation">;</span>

            <span class="token class-name">URL</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">URL</span><span class="token punctuation">(</span>urlPath<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">InputStream</span> is <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">8192</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> bytesRead<span class="token punctuation">;</span>
            <span class="token class-name">ByteArrayOutputStream</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>bytesRead <span class="token operator">=</span> is<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                output<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bytesRead<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>output<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">5372</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                printWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                printWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cont<span class="token operator">++</span> <span class="token operator">+</span> <span class="token string">&quot; id: &quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

</code></pre>
<blockquote>
<p>Don&#x27;t press the word OR</p>
</blockquote>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[New version of Grade Calculator, new interface]]></title>
            <link>undefined/articles/new-version-of-grade-calculator-new-interface</link>
            <guid>undefined/articles/new-version-of-grade-calculator-new-interface</guid>
            <pubDate>Sun, 01 Nov 2015 00:00:00 GMT</pubDate>
            <description><![CDATA[New version of Grade Calculator, new interface.]]></description>
            <content:encoded><![CDATA[<p>A little less than a year ago, after my first university exams, I created <a href="http://tonilopezmr.github.io/calculanotas">Grade Calculator</a>. It&#x27;s an application that calculates university course grades by setting up the evaluation system that each course follows and adding exams.</p>
<p>The idea came from the fact that every time I wanted to check how I was doing with grades, I would take out my calculator, look at how the course worked and calculate them. Since I was doing this with each course, I thought of making an application and being able to learn new Android programming concepts and try out some new interface components.</p>
<h2>First Steps</h2>
<p>The application needed to show me the grades for different parts of a course, such as exam grades and the grade for each evaluation group (Theory, Practice, etc.), and be able to see all of this at a glance.</p>
<p>So I decided to show a course on one screen with all its content through expandable sections, insert information through dialogs, and edit by long-pressing what you wanted to edit. This way I had everything in view.</p>
<p>Finally, I had:</p>
<ul>
<li>Just one main screen</li>
<li>List of exams with the side bar</li>
<li>List of evaluation groups that are expandable with exams</li>
<li>Dialog to create/modify a course, evaluation groups and exams.</li>
</ul>
<h2>Sketching</h2>
<img alt="First sketch of Grade Calculator" loading="lazy" width="866" height="394" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsketch1.8bf8bc8a.jpg&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsketch1.8bf8bc8a.jpg&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsketch1.8bf8bc8a.jpg&amp;w=1920&amp;q=75"/>
<p>The first sketch I made, showing clearly the course grade, groups and exams within them, also the NavigationView with all courses.</p>
<img alt="First sketch of Grade Calculator" loading="lazy" width="866" height="394" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fv1_app.29753888.jpg&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fv1_app.29753888.jpg&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fv1_app.29753888.jpg&amp;w=1920&amp;q=75"/>
<p>In the first version, when you first entered, a tutorial appeared explaining how the application worked because when you entered without explanation, you might not know how to do almost anything, and this told me that the design wasn&#x27;t good. I also used dialogs to fill in information. These things made me think about a better interface for a new version shortly after creating the application, a year ago.</p>
<blockquote class="twitter-tweet" lang="en"><p lang="es" dir="ltr">Already thinking about v2.0.0 of <a href="https://twitter.com/hashtag/GradeCalculator?src=hash">#GradeCalculator</a> more intuitive. For next year. <a href="http://t.co/ga4kqglefO">pic.twitter.com/ga4kqglefO</a></p>— Antonio López Marín (@tonilopezmr) <a href="https://twitter.com/tonilopezmr/status/590631903499268097">April 21, 2015</a></blockquote>
<script async="" src="//platform.twitter.com/widgets.js" charSet="utf-8"></script>
<p>The new interface should be similar but without making too sudden a change, the grade should be clearly visible in large format, you should be able to see everything at a glance, and the behavior should be very similar - basically, you enter the application and still know it&#x27;s Grade Calculator but cooler.</p>
<p>Now I would replace the horrible expandable sections with simple cards and always show the exams (even better visualization), also remove the dialogs for filling in data and add details for each entity, meaning that for each group or exam when you tap them you would see their complete details (going to another screen to show you the entire group or exam).</p>
<img alt="Second version of Grade Calculator" loading="lazy" width="866" height="394" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fv2_app.91a02528.jpg&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fv2_app.91a02528.jpg&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fv2_app.91a02528.jpg&amp;w=1920&amp;q=75"/>
<p>The course grade is clearly visible along with the groups and first 2 exams of each group. If you want to see more about a group, clicking on the group takes you to its details.</p>
<h2>Detail for each entity</h2>
<img alt="Group and exam details" loading="lazy" width="866" height="394" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fdetail_activity.9f96409f.jpg&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fdetail_activity.9f96409f.jpg&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fdetail_activity.9f96409f.jpg&amp;w=1920&amp;q=75"/>
<p>By having details for each entity, the options you can perform on each one are in that same detail. In other words, in the first version if you wanted to modify or delete an exam you had to long-press it and the options would appear, now the options don&#x27;t have to appear when you press it but rather appear when you click on an exam and go to its detail showing you all the information and options you can perform on it.</p>
<p>Now having each entity&#x27;s detail, editing and creation to fill in data will be done in that same detail showing you a full screen to fill in the data, verify it and save it.</p>
<h2>Application Flow</h2>
<p>As I&#x27;ve already mentioned, in the first version there was only one screen where you had everything, and to interact with elements you had to press and hold them for a few seconds.</p>
<p>Now there is a flow between the different three screens that exist; main screen, group detail screen and exam detail screen.</p>
<p>The flow is as follows:</p>
<img alt="Grade Calculator Flow" loading="lazy" width="1000" height="455" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fflujo_app.cc51753c.jpg&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fflujo_app.cc51753c.jpg&amp;w=2048&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fflujo_app.cc51753c.jpg&amp;w=2048&amp;q=75"/>
<ol>
<li>You create a course, this course suggests you create a group.</li>
<li>You create a group, this group suggests you create exams.</li>
<li>You create an exam and it invites you to fill in its information.</li>
<li>You return to the group, and it suggests you create another exam if you have more exams in that group.</li>
<li>You return to the course, it suggests you create another group.</li>
</ol>
<p>If from step 2 you don&#x27;t go to step 3, but return to the course instead, it doesn&#x27;t matter because from the course the group will appear and within this group it will suggest you create an exam - everything much more logical and simple without having to hold down elements or guess how things work.</p>
<h2>Icon</h2>
<img alt="V1 vs V2" loading="lazy" width="709" height="292" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fv1-vs-v2.4c57868c.jpg&amp;w=750&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fv1-vs-v2.4c57868c.jpg&amp;w=1920&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fv1-vs-v2.4c57868c.jpg&amp;w=1920&amp;q=75"/>
<p>The change in the logo has also been important, as I went from the first logo created with a friend, to making it completely material following the <a href="https://www.google.com/design/spec/style/icons.html#icons-product-icons">Icons guidelines</a>. Initially it was going to remain square, but a friend suggested making it round. I wasn&#x27;t convinced but when I created the round version and ran this survey:</p>
<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
<div class="g-post" data-href="https://plus.google.com/+AntonioLopezMarin/posts/dS2JRxX7Mj9"></div>
<p>It won by a landslide and I decided to use the round one.</p>
<h2>Animations</h2>
<p>The animations that make an application look so cool are somewhat visible in version 2, especially animated transitions. I could have added more but due to lack of time and motivation I only put animations when creating entities.</p>
<h3>Add Group</h3>
<img alt="Transition when creating a group" loading="lazy" width="320" height="569" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgroup_animation.ec88eacd.gif&amp;w=384&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgroup_animation.ec88eacd.gif&amp;w=640&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgroup_animation.ec88eacd.gif&amp;w=640&amp;q=75"/>
<h3>Add Grade</h3>
<img alt="V1 vs V2" loading="lazy" width="320" height="569" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fexam_animation.edbc0e37.gif&amp;w=384&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fexam_animation.edbc0e37.gif&amp;w=640&amp;q=75 2x" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fexam_animation.edbc0e37.gif&amp;w=640&amp;q=75"/>
<h2>Improvements</h2>
<p>Even more things could have been improved, like when it shows the message that you&#x27;ve deleted a course you could do a rollback saying to discard the change and everything would be restored as it was. The NavigationView (the sliding side bar) could also have been replaced with tabs (Tabslayout) since many designers refer to the NavigationView&#x27;s 3 vertical bars as the hamburger menu and the right menu with 3 vertical dots as the kebab menu:</p>
<blockquote class="twitter-tweet" lang="en"><p lang="en" dir="ltr">Don&#x27;t ever say you don&#x27;t have choices on mobile. <a href="http://t.co/Atu3Ogi58j">pic.twitter.com/Atu3Ogi58j</a></p>— Luke Wroblewski (@lukew) <a href="https://twitter.com/lukew/status/591296890030915585">April 23, 2015</a></blockquote>
<script async="" src="//platform.twitter.com/widgets.js" charSet="utf-8"></script>
<hr/>
<h2>A not too distant future</h2>
<hr/>
<p>In an intermediate version I&#x27;m going to allow logging into the application so that courses can be saved in the cloud and not lost if you change phones, and also to be able to make a web version to learn how to make web applications.</p>
<p>For version 3 I will make it possible to share courses with the percentages of groups and courses, meaning being able to pass the structure that each course follows to your friends and not having to manually create groups that an entire class has the same or even an entire year.</p>
<p>You can download <a href="http://tonilopezmr.github.io/calculanotas">Grade Calculator</a> and let me know what you think.</p>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
        <item>
            <title><![CDATA[Android Design Library: Diferentes formas de implementar NavigationView y DrawableLayout]]></title>
            <link>undefined/articles/different-ways-for-implement-navigationview</link>
            <guid>undefined/articles/different-ways-for-implement-navigationview</guid>
            <pubDate>Wed, 30 Sep 2015 00:00:00 GMT</pubDate>
            <description><![CDATA[Android Design Library: Diferentes formas de implementar NavigationView y DrawableLayout.]]></description>
            <content:encoded><![CDATA[<p>Ahora que lleva ya un tiempo la <a href="http://android-developers.blogspot.com.es/2015/05/android-design-support-library.html">Android Design Support Library</a>, he decidido actualizar algunos de mis proyectos con esta librería y en uno de los proyectos el NavigationView tenia unos items que podían variar (añadir o quitar) y otros como pie de página en la parte inferior del NavigationView como podían ser: compartir, valorar la aplicación, etc… Y en otros el DrawerLayout estaba por debajo del Toolbar.</p>
<h2>Standard</h2>
<p>Según pone en el articulo de <a href="http://android-developers.blogspot.com.es/2015/05/android-design-support-library.html">Android Design Support Library</a> sin modificar nada se haría así:</p>
<pre class="language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.v4.widget.DrawerLayout</span>
        <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/tools<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/drawer_layout<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fitsSystemWindows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">tools:</span>openDrawer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>start<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- Content here --&gt;</span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.design.widget.NavigationView</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/nav_view<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>start<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>fitsSystemWindows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">app:</span>headerLayout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@layout/nav_header_main<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">app:</span>menu</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@menu/activity_main_drawer<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>android.support.v4.widget.DrawerLayout</span><span class="token punctuation">&gt;</span></span>
</code></pre>
<p><img src="https://cdn-images-1.medium.com/max/1600/1*mgbxAxAV_FRTzcFouk7j-g.gif" alt="Implementando NavigationView standard."/></p>
<h2>Con pie de página</h2>
<p>Si quieres que los items de pie de página estén visibles en todo momento, aunque haya muchos items encima, esta es una posible forma de implementarlo:</p>
<pre class="language-xml"><code class="language-xml">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.v4.widget.DrawerLayout</span>
        <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/drawer_layout<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fitsSystemWindows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- Content here --&gt;</span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.design.widget.NavigationView</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/navigation_drawer_container<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>start<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span>
                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.design.widget.NavigationView</span>
                    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/navigation_view_body<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>top<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name"><span class="token namespace">app:</span>headerLayout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@layout/nav_header_main<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name"><span class="token namespace">app:</span>menu</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@menu/body_nav<span class="token punctuation">&quot;</span></span>
                   <span class="token attr-name"><span class="token namespace">android:</span>layout_above</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/navigation_view_bottom<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.design.widget.NavigationView</span>
                    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/navigation_view_bottom<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentBottom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name"><span class="token namespace">app:</span>headerLayout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@layout/bottom_nav_header<span class="token punctuation">&quot;</span></span>
                    <span class="token attr-name"><span class="token namespace">app:</span>menu</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@menu/footer_nav<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>android.support.design.widget.NavigationView</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>android.support.v4.widget.DrawerLayout</span><span class="token punctuation">&gt;</span></span>
</code></pre>
<ul>
<li><strong>Body</strong> — NavigationView de la parte superior que contendrá el header y los items principales.</li>
<li><strong>Footer</strong> — NavigationView en la parte de abajo que siempre se mostrará.</li>
<li><strong>Container</strong> — El NavigationView que contiene a los dos anteriores (es opcional).</li>
</ul>
<p>Para que aparezca una linea separadora entre las dos listas (divider), hay que añadir el atributo headerLayout en el navigation_view_button con el siguiente layout:</p>
<p><em>bottom_nav_header.xml</em></p>
<pre class="language-xml"><code class="language-xml">    <span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertical<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1dp<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#d5d5d5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span>
</code></pre>
<p>El NavigationView que funciona como contenedor se puede quitar y dejar tan solo el RelativeLayout, pero lo mantengo por si necesito usar alguna utilidad del NavigationView como, por ejemplo, poner el header y dejarlo fijo (que no se pueda hacer scroll).</p>
<p>Al tener dos NavigationViews diferentes puedes controlar las acciones sobre los items de diferente listas de una manera más “limpia”, como por ejemplo en los items de la lista principal, al pulsar que muestren diferentes fragments, y los items del footer que simplemente lancen acciones, como podría ser abrir una aplicación externa.
Este sería el resultado final.</p>
<p><img src="https://cdn-images-1.medium.com/max/1600/1*G52oJ8FMY_YuNEl7n4PkIg.gif" alt="NavigationView con pie de página fijo."/></p>
<h2>NavigationView por debajo del Toolbar</h2>
<p>Si se desea que el NavigationView este por debajo del Toolbar, lo normal es que no tenga headerLayout ya que el espacio de la lista será más reducido:</p>
<pre class="language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.design.widget.CoordinatorLayout</span>
        <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/tools<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fitsSystemWindows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.MainActivity<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.design.widget.AppBarLayout</span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@style/AppTheme.AppBarOverlay<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.v7.widget.Toolbar</span>
                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/toolbar<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>?attr/actionBarSize<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>?attr/colorPrimary<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@style/AppTheme.AppBarOverlay<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name"><span class="token namespace">app:</span>popupTheme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@style/AppTheme.PopupOverlay<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>android.support.design.widget.AppBarLayout</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.v4.widget.DrawerLayout</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/drawer_layout<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>fitsSystemWindows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">tools:</span>openDrawer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>start<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">app:</span>layout_behavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@string/appbar_scrolling_view_behavior<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

            <span class="token comment">&lt;!-- Content here --&gt;</span>

            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.design.widget.NavigationView</span>
                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/navigation_view_container<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name"><span class="token namespace">android:</span>fitsSystemWindows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>start<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

               <span class="token comment">&lt;!-- ... --&gt;</span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>android.support.v4.widget.DrawerLayout</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>android.support.design.widget.CoordinatorLayout</span><span class="token punctuation">&gt;</span></span>
</code></pre>
<p>Ahora el DrawerLayout ya no es el contenedor de la actividad sino que pasa a ser el CoordinatorLayout (o cualquier otro) y lo importante es que el Toolbar se está por encima de DrawerLayout, todo lo demás es una implementación normal del NavigationView.</p>
<p>Esta forma de implementar el NavigationView no es usual ya que renuncias a muchas cosas buenas que tiene Appbar y Toolbar, como podría ser Parallax o efectos similares en el que Toolbar es en algún momento más grande de lo normal ya que NavigationView estaría debajo en todo momento.</p>
<p><img src="https://cdn-images-1.medium.com/max/1600/1*_ySVKSkuQaenJ7QT4X5ZJw.gif" alt="NavigationView por debajo de toolbar."/></p>
<p>Todo el código esta incluido en <a href="https://github.com/tonilopezmr/Android-Examples">Android-Examples</a> en el modulo <a href="https://github.com/tonilopezmr/Android-Examples/tree/master/navigationview">navigationview</a>.andr</p>
<hr/>]]></content:encoded>
            <author>no-email@email.com (Toni López)</author>
        </item>
    </channel>
</rss>